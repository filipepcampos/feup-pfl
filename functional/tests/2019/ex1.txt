a) [[1,2]] ++ [[]] ++ [[3,4],[5]] = [[1,2],[],[3,4],[5]]
b) ([1,2]:[]:[3,4]:[[5]]) !! 3 = ([[1,2],[],[3,4],[5]]) !! 3 = [5]
c) length ([]:[]:[]) = length ([]:[[]]) = length ([[],[]]) = 2
d) drop 4 [0,4..32] = drop 4 [0,4,8,12,16,20..] = [16,20,24,28,32]
e) [(x+y,x*y) | x <-[1..4], y<-[x+1..4]] = [(3,2),(4,3)(5,4)(,5,6),(6,8),(7,12)]

f) [[y | y <- ys, y `mod` 2 == 0] | ys <- [[3,5,2,8], [4,6,7,1,3], [9,5,11]]]
    = [[2],[4,6],[]]

g) [(0,6), (1,5), (2,4), (3,3), (4,2), (5,1), (6,0)]
[(n,6-n) | n <- [0..6]]

h)

h [] = 1
h [x] = x
h (x:y:xs) = x*y + h (y:xs)

h [1,3,1,5,0,4] =
3 + h [3,1,5,0,4] =
3 + 3 + h [1,5,0,4] =
3 + 3 + 5 h [1,0,4] =
3 + 3 + 5 + 0 + h [0,4] =
3 + 3 + 5 + 0 + 0 + h [4] =
3 + 3 + 5 + 0 + 0 + 4 = 15

i) [('1', "a"), ('2', "b")]
[(Char, String)]

j) f x xs = sum xs < x
Num a => a -> [a] -> Bool

k)

ig [] = True
ig [x] = True
ig (x1:x2:xs) = x1 == x2 && ig (x2:xs)

ig :: (Eq a) => [a]

l) fix f x = f x == x
fix :: (Eq a) => (a -> a) -> a -> Bool

