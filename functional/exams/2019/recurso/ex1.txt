1.
a) []:[]:[] ++ []:[]:[] = [[]]:[] ++ [[]] : [] = [[[]]] ++ [[[]]] = [[[]], [[]]]

b)
length (...) = 2

c) map (`div` 4) [1..10] = [0,0,0,1,1,1,1,2,2,2]

d) takeWhile (<100) (iterate (*3) 1) = [1,3,9,27,27*3]

e) []

f) take 10 [2*x*y | x<-[1..], y<-[1..]] = [2,4,6,8,10,12,14,16,18,20]

g) [if (even n) then (n `div` 2) * 4 else 2^n - 1 | n <- [0..]] 

h) False

i) [a], ou :: Ord a => [(a -> Bool)]

j) [Char] -> Int

k) data Arv a = Vazia | No (Arv a) a (Arv a)

l) flip :: (a -> a -> b) -> a -> a -> b


